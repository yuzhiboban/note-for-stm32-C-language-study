C语言的引用只能对单个变量引用，不能对整个数组引用。
引用： eg:int s;int &n=s;

联合体：union name
{
成员表
};
union name s;

枚举：enum name {, , , , , ,}
每个枚举类型占四个字节，不初始化时，第一个大小是0，然后每个都是前面递增一。

printf格式问题：%d:整型； %x:16进制；%o ：8进制
C语言赋值：以0开头是8进制，0x/0X开头是16进制，0B/0b是2进制表示；
科学计数法表示： 
①字母e与字母E等同，即e与E均为解码标志，表示以10为底的指数，无大小写区分；
②字母（E或e）前面必须有数据；
③字母（E或e）后面必须是整型数据；
④字母（E或e）和数学之间不能存在空格；
⑤字母（E或e）前数据应取到小数点左侧为个位为止，规范表达 ;
逻辑运算符：||存在短路，当前面为真时，后面的不被考虑，&&存在断路，前面为假，后面不被考虑。
后置运算符：理解副作用和顺序点，分号和表达式末尾都是一个顺序点。副作用必须在顺序点前完成，同时还要遵循优先级规则。
数组：二维数组的名字是指向数组的指针，例如，int arry[m][n]; arry指向一个n个元素组成的数组，且指向的是整个数组的首地址，步长为n*sizeof(int).当sizeof（arry）时代表整个数组。
一维数组：a=&a。取地址是自身。
字符数组：sizeof求整个数组的大小，和字符串无关。strlen只求到\0处的大小，不包括他的大小。
sizeof()的值是在编译时计算得到的，因此不能用于计算动态分配的内存空间大小。
strlen()在运行时计算。
scanf只能控制输入宽度，不能控制精度。

---------------------------------字符串-----------------------------
赋值:声明一个char *指针，然后声明时直接赋值，或者先声明，后赋值。
char *str;  str="hello";
char *str="hello";

char charArray[] = "Hello World!";//字符数组缺省大小。

数组形式的字符串，其字符串内容可变，但是数组名本身不可变（因为还是数组），字符串常量形式的，指针可指向其他内存，但是字符串内容不可变。

函数：strlen()计算字符串大小，从输入的指针开始，直到第一个'\0'.
char *strcpy(char *dest, const char *src)不检查溢出情况。该函数返回一个指向最终的目标字符串 dest 的指针。

char *strcat(char *dest, const char *src) 接在 dest后，第一个'\0'后。

int strcmp(const char* stri1，const char* str2);比较两个字符串的大小。

运算符
%得出的结果取决于被除数的符号。C语言中的取余运算只能针对整数
/一旦除数和被除数中有一个是小数，那么运算结果也是小数，并且是 double 类型的小数。

